<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <UsingTask TaskName="GenerateHttpTriggerLookupTask" AssemblyFile="$(MSBuildThisFileDirectory)..\build\Fermyon.Spin.MSBuild.dll" />

	<ItemGroup>
        <_WasmNativeFileForLinking Include="$(MSBuildThisFileDirectory)\..\native\wit\*.c" />
        <_WasiSdkClangArgs Include="-I&quot;$([System.String]::Copy('$(MSBuildThisFileDirectory)..\native\wit').Replace('\','/'))&quot;" />
        <_WasmNativeFileForLinking Include="$(MSBuildThisFileDirectory)\..\native\*.c" />
        <_WasiSdkClangArgs Include="-I&quot;$([System.String]::Copy('$(MSBuildThisFileDirectory)..\native').Replace('\','/'))&quot;" />
	</ItemGroup>

	<!-- Wizer is only enabled if the developer explicitly opts in, because it will only work if they have the wizer binary on PATH -->
	<!-- Consider baking wizer into spin itself so that it can generate its own preinitialized version of the .wasm modules during startup -->
	<Target Name="RunWizer" AfterTargets="CopyWasmToOutput" Condition="$(UseWizer) == 'true'">
		<Message Importance="high" Text="Running wizer to preinitialize @(WasiSdkBinOutputFiles)..." />
		<Exec Command="wizer @(WasiSdkBinOutputFiles) -o @(WasiSdkBinOutputFiles).pre.wasm --allow-wasi --wasm-bulk-memory true" />
		<Delete Files="@(WasiSdkBinOutputFiles)" />
		<Move SourceFiles="@(WasiSdkBinOutputFiles->'%(Identity).pre.wasm')" DestinationFiles="@(WasiSdkBinOutputFiles)" />
	</Target>
    
    <!-- dotnet 8 wasi-wasm target currently expects a Main() method so we generate one because we're building a reactor component anyways -->
    <Target Name="GenerateProgram" BeforeTargets="CoreCompile" Outputs="$(IntermediateOutputPath)Program.g.cs">
        <PropertyGroup>
            <_ProgramCs>
class Program
{
    static void Main%28%29
    {
        System.Console.WriteLine%28&quot;Runtime loaded.&quot;%29%3B
    }
}
            </_ProgramCs>
        </PropertyGroup>

        <ItemGroup>
            <_ProgramCsLines Include="$(_ProgramCs.Split(`\n`))" />
        </ItemGroup>

        <WriteLinesToFile
            File="$(IntermediateOutputPath)Program.g.cs"
            Lines="$(_ProgramCs)"
            Overwrite="true" />

        <ItemGroup>
            <Compile Remove="$(IntermediateOutputPath)Program.g.cs" />
            <Compile Include="$(IntermediateOutputPath)Program.g.cs" />
            <FileWrites Include="$(IntermediateOutputPath)Program.g.cs" />
        </ItemGroup>
    </Target>

    <Target Name="CleanGeneratedProgram" AfterTargets="CoreClean">
        <Delete Files="$(IntermediateOutputPath)Program.g.cs" />
    </Target>

    <Target Name="GenerateGlueCode" AfterTargets="Build" BeforeTargets="_BeforeWasmBuildApp">
        <PropertyGroup>
            <!-- Recreating this property from the SDK -->
            <_WasmIntermediateOutputPath Condition="'$(WasmBuildingForNestedPublish)' == ''">$([MSBuild]::NormalizeDirectory($(IntermediateOutputPath), 'wasm', 'for-build'))</_WasmIntermediateOutputPath>
            <_WasmIntermediateOutputPath Condition="'$(WasmBuildingForNestedPublish)' != ''">$([MSBuild]::NormalizeDirectory($(IntermediateOutputPath), 'wasm', 'for-publish'))</_WasmIntermediateOutputPath>      
        </PropertyGroup>
        <GenerateHttpTriggerLookupTask
            AssemblyPath="$(TargetPath)"
            OutputPath="$(_WasmIntermediateOutputPath)" />
        <ItemGroup>
            <NativeFileReference Include="$(_WasmIntermediateOutputPath)http-trigger-lookup.c" />
			<_WasmNativeFileForLinking Include="@(NativeFileReference)" />
        </ItemGroup>
    </Target>
</Project>
